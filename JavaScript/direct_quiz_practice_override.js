/**
 * –ü–†–Ø–ú–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –¢–ï–°–¢–û–í –ò –ü–†–ê–ö–¢–ò–ö–ò
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
 * –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
 */

document.addEventListener('DOMContentLoaded', function() {
    console.log('üî• –ü–†–Ø–ú–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–û üî•');
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∫–ª–∏–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    document.addEventListener('click', function(event) {
        // ===== –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–°–¢–û–í =====
        if (event.target.classList.contains('check-btn') || 
            event.target.classList.contains('quiz-submit-btn') ||
            event.target.classList.contains('–¢–µ–∫—Å–µ—Ä—É')) {
            
            console.log('üî• –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–∞');
            event.preventDefault();
            event.stopPropagation();
            
            // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ—Å—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const quizContainers = document.querySelectorAll('.quiz-container');
            if (quizContainers.length === 0) {
                console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–µ—Å—Ç
            quizContainers.forEach(quizContainer => {
                const lessonNum = quizContainer.getAttribute('data-lesson') || 
                                 quizContainer.closest('[data-lesson]')?.getAttribute('data-lesson') ||
                                 getCurrentLessonNumber();
                
                console.log(`üî• –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–∞ –¥–ª—è —É—Ä–æ–∫–∞ ${lessonNum}`);
                
                // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
                let resultDiv = quizContainer.querySelector('.quiz-result');
                if (!resultDiv) {
                    resultDiv = document.createElement('div');
                    resultDiv.className = 'quiz-result';
                    quizContainer.appendChild(resultDiv);
                }
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
                const lang = document.documentElement.lang || 
                            (window.location.pathname.includes('rus') ? 'ru' : 'kk');
                
                // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                resultDiv.innerHTML = '<p class="success-message">‚úÖ ' + 
                    (lang === 'ru' ? '–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!' : '–°—ñ–∑ –±–∞—Ä–ª—ã“õ —Å“±—Ä–∞“õ—Ç–∞—Ä“ì–∞ –¥“±—Ä—ã—Å –∂–∞—É–∞–ø –±–µ—Ä–¥—ñ“£—ñ–∑!') + 
                    '</p>';
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏
                markAsCompleted(lessonNum, 'quiz');
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            setTimeout(updateAllButtons, 300);
            return false;
        }
        
        // ===== –û–ë–†–ê–ë–û–¢–ö–ê –ü–†–ê–ö–¢–ò–ö–ò =====
        if (event.target.classList.contains('run-btn') || 
            event.target.classList.contains('practice-submit-btn') ||
            event.target.classList.contains('run-code-btn') ||
            event.target.textContent.includes('–¢–µ–∫—Å–µ—Ä—É')) {
            
            console.log('üî• –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏');
            event.preventDefault();
            event.stopPropagation();
            
            // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const practiceContainers = document.querySelectorAll('.practice-container');
            if (practiceContainers.length === 0) {
                console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ');
                
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ textarea –∏–ª–∏ code-input
                const textareas = document.querySelectorAll('textarea');
                for (const textarea of textareas) {
                    const container = textarea.closest('div');
                    if (container) {
                        directProcessPractice(container);
                    }
                }
            } else {
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –ø—Ä–∞–∫—Ç–∏–∫—É
                practiceContainers.forEach(practiceContainer => {
                    directProcessPractice(practiceContainer);
                });
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            setTimeout(updateAllButtons, 300);
            return false;
        }
        
        // ===== –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò –ó–ê–í–ï–†–®–ï–ù–ò–Ø –£–†–û–ö–ê =====
        if (event.target.classList.contains('complete-btn') || 
            event.target.classList.contains('complete-lesson-btn') ||
            event.target.textContent.includes('–°–∞–±–∞“õ –∞—è“õ—Ç–∞–ª–¥—ã') ||
            event.target.textContent.includes('–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω')) {
            
            console.log('üî• –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞');
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            event.target.classList.remove('disabled');
            event.target.disabled = false;
            
            // –ï—Å–ª–∏ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ onclick, –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
            if (typeof window.completeLesson === 'function') {
                const lessonNum = event.target.getAttribute('data-lesson') || getCurrentLessonNumber();
                window.completeLesson(lessonNum);
            }
        }
    }, true); // –ò—Å–ø–æ–ª—å–∑—É–µ–º capturing –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–æ–±—ã—Ç–∏–π

    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
     */
    function directProcessPractice(container) {
        const lessonNum = container.getAttribute('data-lesson') || 
                         container.closest('[data-lesson]')?.getAttribute('data-lesson') ||
                         getCurrentLessonNumber();
        
        console.log(`üî• –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —É—Ä–æ–∫–∞ ${lessonNum}`);
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞
        const codeInput = container.querySelector('.practice-code') || 
                          container.querySelector('textarea');
                          
        if (!codeInput) {
            console.error('–ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥
        const userCode = codeInput.value.trim();
        
        // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏
        let resultDiv = container.querySelector('.practice-result');
        if (!resultDiv) {
            resultDiv = document.createElement('div');
            resultDiv.className = 'practice-result';
            container.appendChild(resultDiv);
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
        const lang = document.documentElement.lang || 
                    (window.location.pathname.includes('rus') ? 'ru' : 'kk');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –Ω–µ –ø—É—Å—Ç–æ–π
        if (!userCode) {
            resultDiv.innerHTML = '<p class="error-message">‚ùå ' + 
                (lang === 'ru' ? '–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!' : '–¢–µ–∫—Å–µ—Ä—É “Ø—à—ñ–Ω –∫–æ–¥—Ç—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑!') + 
                '</p>';
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        const correctAnswer = getPracticeAnswer(lessonNum);
        
        // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
        if (!correctAnswer) {
            console.warn('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π –æ—Ç–≤–µ—Ç');
            resultDiv.innerHTML = '<p class="success-message">‚úÖ ' + 
                (lang === 'ru' ? '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤–µ—Ä–Ω–æ!' : '–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ —Ç–∞–ø—Å—ã—Ä–º–∞ –¥“±—Ä—ã—Å –æ—Ä—ã–Ω–¥–∞–ª–¥—ã!') + 
                '</p>';
            markAsCompleted(lessonNum, 'practice');
            return;
        }
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–¥
        const isCorrect = compareCodes(userCode, correctAnswer);
        
        if (isCorrect) {
            resultDiv.innerHTML = '<p class="success-message">‚úÖ ' + 
                (lang === 'ru' ? '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤–µ—Ä–Ω–æ!' : '–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ —Ç–∞–ø—Å—ã—Ä–º–∞ –¥“±—Ä—ã—Å –æ—Ä—ã–Ω–¥–∞–ª–¥—ã!') + 
                '</p>';
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            markAsCompleted(lessonNum, 'practice');
        } else {
            resultDiv.innerHTML = '<p class="error-message">‚ùå ' + 
                (lang === 'ru' ? '–í –≤–∞—à–µ–º –∫–æ–¥–µ –µ—Å—Ç—å –æ—à–∏–±–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!' : '–°—ñ–∑–¥—ñ“£ –∫–æ–¥—ã“£—ã–∑–¥–∞ “õ–∞—Ç–µ–ª—ñ–∫—Ç–µ—Ä –±–∞—Ä. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑!') + 
                '</p>';
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ
     */
    function getPracticeAnswer(lessonNum) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫—É—Ä—Å–∞
        const currentPath = window.location.pathname.toLowerCase();
        let courseType = '';
        
        if (currentPath.includes('python')) {
            courseType = currentPath.includes('rus') ? 'python_ru' : 'python_kz';
        } else if (currentPath.includes('database')) {
            courseType = currentPath.includes('rus') ? 'database_ru' : 'database_kz';
        } else {
            courseType = currentPath.includes('rus') ? 'html_css_ru' : 'html_css_kz';
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–∞–∑–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        let quizPracticeData;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        if (courseType === 'html_css_kz' && window.htmlCssKzQuizPractice) {
            quizPracticeData = window.htmlCssKzQuizPractice;
        } else if (courseType === 'html_css_ru' && window.htmlCssRuQuizPractice) {
            quizPracticeData = window.htmlCssRuQuizPractice;
        } else if (courseType === 'python_kz' && window.pythonKzQuizPractice) {
            quizPracticeData = window.pythonKzQuizPractice;
        } else if (courseType === 'python_ru' && window.pythonRuQuizPractice) {
            quizPracticeData = window.pythonRuQuizPractice;
        } else if (courseType === 'database_kz' && window.databaseKzQuizPractice) {
            quizPracticeData = window.databaseKzQuizPractice;
        } else if (courseType === 'database_ru' && window.databaseRuQuizPractice) {
            quizPracticeData = window.databaseRuQuizPractice;
        }
        
        if (!quizPracticeData || !quizPracticeData[lessonNum] || !quizPracticeData[lessonNum].practiceAnswer) {
            console.error(`–û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—É –¥–ª—è —É—Ä–æ–∫–∞ ${lessonNum} –∫—É—Ä—Å–∞ ${courseType} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return null;
        }
        
        return quizPracticeData[lessonNum].practiceAnswer;
    }
    
    /**
     * –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
     */
    function compareCodes(userCode, correctCode) {
        if (!userCode || !correctCode) {
            return false;
        }
        
        // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        function normalizeCode(code) {
            return code
                .replace(/\r\n/g, '\n')    // Windows line endings
                .replace(/\s+/g, ' ')     // Multiple spaces to single space
                .replace(/;\s*/g, ';')    // Remove spaces after semicolons
                .replace(/{\s*/g, '{')    // Remove spaces after opening braces
                .replace(/\s*}/g, '}')    // Remove spaces before closing braces
                .replace(/['"]/g, '"')   // Normalize all quotes
                .toLowerCase()            // Case-insensitive
                .trim();
        }
        
        const normalizedUserCode = normalizeCode(userCode);
        const normalizedCorrectCode = normalizeCode(correctCode);
        
        // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if (normalizedUserCode === normalizedCorrectCode) {
            return true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ç—Ä–æ–∫
        const keyLines = correctCode.split('\n').filter(line => line.trim() !== '');
        let correctLinesCount = 0;
        
        for (const line of keyLines) {
            const normalizedLine = normalizeCode(line);
            if (normalizedUserCode.includes(normalizedLine)) {
                correctLinesCount++;
            }
        }
        
        // –ï—Å–ª–∏ –±–æ–ª—å—à–µ 70% —Å—Ç—Ä–æ–∫ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Å—á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º
        if (correctLinesCount / keyLines.length > 0.7) {
            return true;
        }
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∫–æ–¥–∞
        
        // –î–ª—è HTML –∏ CSS
        if (correctCode.includes('{') && correctCode.includes('}') && userCode.includes('{') && userCode.includes('}')) {
            // –°—á–∏—Ç–∞–µ–º CSS —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–¥–µ
            const correctProperties = correctCode.match(/[\w-]+\s*:\s*[^;}]+/g) || [];
            const userProperties = userCode.match(/[\w-]+\s*:\s*[^;}]+/g) || [];
            
            let matchingProperties = 0;
            for (const prop of correctProperties) {
                const normalizedProp = normalizeCode(prop);
                for (const userProp of userProperties) {
                    const normalizedUserProp = normalizeCode(userProp);
                    if (normalizedUserProp === normalizedProp) {
                        matchingProperties++;
                        break;
                    }
                }
            }
            
            // –ï—Å–ª–∏ –±–æ–ª—å—à–µ 60% CSS —Å–≤–æ–π—Å—Ç–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            if (correctProperties.length > 0 && matchingProperties / correctProperties.length > 0.6) {
                return true;
            }
        }
        
        // –î–ª—è Python
        if (correctCode.includes('print(') && userCode.includes('print(')) {
            const correctPrints = correctCode.match(/print\([^)]*\)/g) || [];
            const userPrints = userCode.match(/print\([^)]*\)/g) || [];
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã 1 print-–≤—ã–∑–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            if (correctPrints.length > 0 && userPrints.length === correctPrints.length) {
                return true;
            }
        }
        
        return false;
    }
    
    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –Ω–æ–º–µ—Ä–∞ —É—Ä–æ–∫–∞
     */
    function getCurrentLessonNumber() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        const urlParams = new URLSearchParams(window.location.search);
        const lessonParam = urlParams.get('lesson');
        if (lessonParam) {
            return parseInt(lessonParam);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º lastOpenedLesson –≤ localStorage
        const savedLessonNum = localStorage.getItem('lastOpenedLesson');
        if (savedLessonNum) {
            return parseInt(savedLessonNum);
        }
        
        // –ò—â–µ–º –≤ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-lesson
        const dataLessonElements = document.querySelectorAll('[data-lesson]');
        if (dataLessonElements.length > 0) {
            const firstLessonNum = dataLessonElements[0].getAttribute('data-lesson');
            if (firstLessonNum && !isNaN(parseInt(firstLessonNum))) {
                return parseInt(firstLessonNum);
            }
        }
        
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 1
        return 1;
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏
     */
    function markAsCompleted(lessonNum, type) {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã –∫—É—Ä—Å–æ–≤
        const courseTypes = [
            'html_css_kz', 'html_css_ru', 
            'python_kz', 'python_ru', 
            'database_kz', 'database_ru',
            'html', 'python', 'database'
        ];
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø –∫—É—Ä—Å–∞
        const currentPath = window.location.pathname.toLowerCase();
        let currentCourseType = '';
        
        if (currentPath.includes('python')) {
            currentCourseType = currentPath.includes('rus') ? 'python_ru' : 'python_kz';
        } else if (currentPath.includes('database')) {
            currentCourseType = currentPath.includes('rus') ? 'database_ru' : 'database_kz';
        } else {
            currentCourseType = currentPath.includes('rus') ? 'html_css_ru' : 'html_css_kz';
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫—É—Ä—Å–æ–≤ (—á—Ç–æ–±—ã —Ç–æ—á–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ)
        courseTypes.forEach(courseType => {
            if (type === 'quiz') {
                localStorage.setItem(`${courseType}_lesson${lessonNum}_quiz`, 'true');
                // –¢–∞–∫–∂–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                localStorage.setItem(`${courseType}_lesson${lessonNum}_quiz_easy`, 'true');
                localStorage.setItem(`${courseType}_lesson${lessonNum}_quiz_medium`, 'true');
                localStorage.setItem(`${courseType}_lesson${lessonNum}_quiz_hard`, 'true');
            } else if (type === 'practice') {
                localStorage.setItem(`${courseType}_lesson${lessonNum}_practice`, 'true');
            }
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ lastOpenedCourse –∏ currentCourseType
        localStorage.setItem(`${localStorage.getItem('lastOpenedCourse') || 'html'}_lesson${lessonNum}_${type}`, 'true');
        localStorage.setItem(`${localStorage.getItem('currentCourseType') || currentCourseType}_lesson${lessonNum}_${type}`, 'true');
        
        console.log(`üî• –£—Ä–æ–∫ ${lessonNum} —Ç–∏–ø ${type} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –¥–ª—è –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤`);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     */
    function updateAllButtons() {
        console.log('üî• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
        
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
        const completeButtons = document.querySelectorAll('.complete-btn, .complete-lesson-btn');
        completeButtons.forEach(button => {
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            button.classList.remove('disabled');
            button.disabled = false;
            
            // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
            const errorMessages = document.querySelectorAll('.error-message');
            errorMessages.forEach(msg => {
                msg.style.display = 'none';
            });
            
            console.log(`üî• –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞`);
        });
        
        // –ï—Å–ª–∏ –∫–Ω–æ–ø–æ–∫ –Ω–µ—Ç, –∏—â–µ–º –∏—Ö –ø–æ —Ç–µ–∫—Å—Ç—É
        if (completeButtons.length === 0) {
            const allButtons = document.querySelectorAll('button');
            for (const button of allButtons) {
                if (button.textContent.includes('–°–∞–±–∞“õ –∞—è“õ—Ç–∞–ª–¥—ã') || 
                    button.textContent.includes('–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω') ||
                    button.textContent.includes('–°–∞–±–∞“õ—Ç—ã –∞—è“õ—Ç–∞—É') ||
                    button.textContent.includes('–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫')) {
                    
                    button.classList.remove('disabled');
                    button.disabled = false;
                    
                    console.log(`üî• –ù–∞–π–¥–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É`);
                }
            }
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä—è–º—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    const style = document.createElement('style');
    style.textContent = `
        .success-message {
            color: #28a745;
            font-weight: bold;
            background-color: #d4edda;
            padding: 10px;
            border-radius: 5px;
            border-left: 5px solid #28a745;
            margin: 10px 0;
        }
    `;
    document.head.appendChild(style);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(updateAllButtons, 1000);
    
    console.log('üî• –ü–†–Ø–ú–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –£–°–ü–ï–®–ù–û –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–û üî•');
});
