/**
 * Файл с тестами и практическими заданиями для курса Python на русском языке
 */

// Тесты и практические задания для урока 1
const lesson1_quiz_practice = {
  // Практическое задание для урока 1
  practiceTask: `
    <p>Напишите показанный ниже код Python:</p>
    <ol>
      <li>Используя функцию print(), выведите текст "Привет, мир!"</li>
      <li>На следующей строке используя функцию print(), выведите текст "Я изучаю язык Python"</li>
      <li>На следующей строке используя символ # напишите комментарий "Это комментарий"</li>
      <li>На последней строке используя функцию print(), выведите число 2023</li>
    </ol>
  `,
  
  // Ответ на практическое задание для урока 1
  practiceAnswer: `print("Привет, мир!")
print("Я изучаю язык Python")
# Это комментарий
print(2023)`
};

// Тесты и практические задания для урока 2
const lesson2_quiz_practice = {
  // Тест для урока 2
  quizQuestions: [
    {
      text: 'Какое ключевое слово используется для объявления переменной в Python?',
      options: [
        'var',
        'let',
        'const',
        'Никакое ключевое слово не требуется'
      ]
    },
    {
      text: 'Какой тип данных используется для хранения целых чисел в Python?',
      options: [
        'float',
        'int',
        'str',
        'bool'
      ]
    },
    {
      text: 'Какими символами обозначаются строки (strings) в Python?',
      options: [
        'Только двойные кавычки ("")',
        'Только одинарные кавычки (\'\')',
        'Только тройные кавычки (""" """)',
        'Одинарные, двойные или тройные кавычки'
      ]
    },
    {
      text: 'Какой символ используется для написания комментария в Python?',
      options: [
        '//',
        '/* */',
        '#',
        '--'
      ]
    },
    {
      text: 'Какие символы могут быть в имени переменной в Python?',
      options: [
        'Только буквы',
        'Буквы и цифры',
        'Буквы, цифры и подчеркивание (_)',
        'Любые символы'
      ]
    }
  ],
  
  // Ответы на тест для урока 2
  quizAnswers: {
    q1: 'd',
    q2: 'b',
    q3: 'd',
    q4: 'c',
    q5: 'c'
  }
};

// Тесты и практические задания для урока 3
const lesson3_quiz_practice = {
  // Практическое задание для урока 3
  practiceTask: `
    <p>Напишите показанный ниже код Python:</p>
    <ol>
      <li>Сохраните ваше имя в переменной name</li>
      <li>Сохраните ваш возраст в переменной age (как целое число)</li>
      <li>Сохраните в переменной is_student значение True или False (True - если вы студент, False - если нет)</li>
      <li>Используя функцию print(), выведите текст "Меня зовут [ваше имя], мне [ваш возраст] лет." (используйте переменные)</li>
      <li>Используя функцию print(), выведите текст "Я студент: " и значение переменной is_student</li>
    </ol>
  `,
  
  // Ответ на практическое задание для урока 3
  practiceAnswer: `name = "Иван"
age = 20
is_student = True
print("Меня зовут " + name + ", мне " + str(age) + " лет.")
print("Я студент:", is_student)`
};

// Тесты и практические задания для урока 4
const lesson4_quiz_practice = {
  // Тест для урока 4
  quizQuestions: [
    {
      text: 'В каком порядке выполняются математические операции в Python?',
      options: [
        'Слева направо',
        'Справа налево',
        'По правилам математического порядка операций (PEMDAS)',
        'По алфавитному порядку операторов'
      ]
    },
    {
      text: 'Что делает оператор % в Python?',
      options: [
        'Вычисляет процент',
        'Деление с плавающей точкой',
        'Целочисленное деление',
        'Находит остаток от деления'
      ]
    },
    {
      text: 'Какой оператор используется для целочисленного деления в Python?',
      options: [
        '/',
        '%',
        '//',
        'div'
      ]
    },
    {
      text: 'Что делает функция round() в Python?',
      options: [
        'Округляет число до ближайшего целого',
        'Всегда округляет вниз',
        'Всегда округляет вверх',
        'Возвращает абсолютное значение числа'
      ]
    },
    {
      text: 'Какой оператор используется для возведения в степень в Python?',
      options: [
        '^',
        '**',
        'pow()',
        '*^'
      ]
    }
  ],
  
  // Ответы на тест для урока 4
  quizAnswers: {
    q1: 'c',
    q2: 'd',
    q3: 'c',
    q4: 'a',
    q5: 'b'
  }
};

// Тесты и практические задания для урока 5
const lesson5_quiz_practice = {
  // Практическое задание для урока 5
  practiceTask: `
    <p>Напишите программу, которая запрашивает возраст пользователя и выводит соответствующее сообщение:</p>
    <ol>
      <li>Если возраст меньше 18, программа должна вывести: "Вы еще несовершеннолетний"</li>
      <li>Если возраст от 18 до 65, программа должна вывести: "Вы взрослый"</li>
      <li>Если возраст больше 65, программа должна вывести: "Вы пенсионер"</li>
    </ol>
  `,
  
  // Ответ на практическое задание для урока 5
  practiceAnswer: `age = int(input("Введите ваш возраст: "))

if age < 18:
    print("Вы еще несовершеннолетний")
elif age <= 65:
    print("Вы взрослый")
else:
    print("Вы пенсионер")`
};

// Тесты и практические задания для урока 6
const lesson6_quiz_practice = {
  // Тест для урока 6
  quizQuestions: [
    {
      text: 'Какими скобками обозначается список (list) в Python?',
      options: [
        '()',
        '{}',
        '[]',
        '<>'
      ]
    },
    {
      text: 'Как получить доступ к первому элементу списка в Python?',
      options: [
        'list[0]',
        'list[1]',
        'list.first()',
        'list.get(0)'
      ]
    },
    {
      text: 'Какой метод используется для добавления элемента в конец списка в Python?',
      options: [
        'add()',
        'insert()',
        'append()',
        'push()'
      ]
    },
    {
      text: 'Как объединить два списка в Python?',
      options: [
        'list1 + list2',
        'list1.add(list2)',
        'list1.join(list2)',
        'list1.merge(list2)'
      ]
    },
    {
      text: 'Как обратиться к последнему элементу списка в Python?',
      options: [
        'last',
        '-1',
        'end',
        'length - 1'
      ]
    }
  ],
  
  // Ответы на тест для урока 6
  quizAnswers: {
    q1: 'c',
    q2: 'a',
    q3: 'c',
    q4: 'd',
    q5: 'b'
  }
};

// Тесты и практические задания для урока 7
const lesson7_quiz_practice = {
  // Практическое задание для урока 7
  practiceTask: `
    <p>Напишите программу, которая демонстрирует использование циклов:</p>
    <ol>
      <li>Используя цикл for и функцию range(), выведите квадраты чисел от 1 до 10</li>
      <li>Используя цикл for и условный оператор if, выведите все четные числа от 1 до 20</li>
      <li>Используя цикл while, выведите обратный отсчет от 5 до 1</li>
    </ol>
  `,
  
  // Ответ на практическое задание для урока 7
  practiceAnswer: `# Квадраты чисел от 1 до 10
for i in range(1, 11):
    print(f"{i} в квадрате = {i**2}")

# Четные числа от 1 до 20
for i in range(1, 21):
    if i % 2 == 0:
        print(i)

# Обратный отсчет от 5 до 1
count = 5
while count > 0:
    print(count)
    count -= 1`
};

// Тесты и практические задания для урока 8
const lesson8_quiz_practice = {
  // Тест для урока 8
  quizQuestions: [
    {
      text: 'Какое ключевое слово используется для определения функции в Python?',
      options: [
        'function',
        'def',
        'func',
        'define'
      ]
    },
    {
      text: 'Что возвращает функция, если в ней нет оператора return?',
      options: [
        'None',
        '0',
        'False',
        'Ошибку'
      ]
    },
    {
      text: 'Как определить функцию с параметрами по умолчанию в Python?',
      options: [
        'def function(param = value)',
        'def function(param: value)',
        'def function(param <- value)',
        'def function(default param = value)'
      ]
    },
    {
      text: 'Как передать неограниченное количество аргументов в функцию Python?',
      options: [
        'Используя *args в определении функции',
        'Используя **kwargs в определении функции',
        'Используя [args] в определении функции',
        'Используя {...} в определении функции'
      ]
    },
    {
      text: 'Как написать документацию функции (docstring) в Python?',
      options: [
        '// Пояснение о функции',
        '# Пояснение о функции',
        '/* Пояснение о функции */',
        '"""Пояснение о функции"""'
      ]
    }
  ],
  
  // Ответы на тест для урока 8
  quizAnswers: {
    q1: 'b',
    q2: 'a',
    q3: 'a',
    q4: 'c',
    q5: 'd'
  }
};

// Тесты и практические задания для урока 9 (итоговый урок)
const lesson9_quiz_practice = {
  // Тест для урока 9 (легкие вопросы)
  quizQuestionsEasy: [
    {
      text: 'Какой символ используется для написания комментария в Python?',
      options: [
        '//',
        '/* */',
        '#',
        '--'
      ]
    },
    {
      text: 'Какими символами обозначаются строки (strings) в Python?',
      options: [
        'Только двойные кавычки ("")',
        'Только одинарные кавычки (\'\')',
        'Только тройные кавычки (""" """)',
        'Одинарные, двойные или тройные кавычки'
      ]
    },
    {
      text: 'Какой тип данных используется для целых чисел в Python?',
      options: [
        'float',
        'int',
        'str',
        'bool'
      ]
    },
    {
      text: 'Какими скобками обозначается список (list) в Python?',
      options: [
        '()',
        '{}',
        '[]',
        '<>'
      ]
    },
    {
      text: 'Какое ключевое слово используется для определения функции в Python?',
      options: [
        'function',
        'def',
        'func',
        'define'
      ]
    }
  ],
  
  // Тест для урока 9 (средние вопросы)
  quizQuestionsMedium: [
    {
      text: 'Каков синтаксис цикла for в Python?',
      options: [
        'for (i = 0; i < 10; i++)',
        'for i in range(10):',
        'for (i in range(10))',
        'for i = 0 to 10'
      ]
    },
    {
      text: 'Какими скобками обозначается словарь (dictionary) в Python?',
      options: [
        '()',
        '{}',
        '[]',
        '<>'
      ]
    },
    {
      text: 'Для чего используется блок try-except в Python?',
      options: [
        'Для управления циклами',
        'Для обработки ошибок',
        'Для определения функций',
        'Для создания классов'
      ]
    },
    {
      text: 'Какое ключевое слово используется для импорта модуля в Python?',
      options: [
        'include',
        'require',
        'import',
        'using'
      ]
    },
    {
      text: 'Каков синтаксис list comprehension в Python?',
      options: [
        '[expression for item in iterable]',
        '[for item in iterable: expression]',
        '[item -> expression for iterable]',
        'for item in iterable yield expression'
      ]
    }
  ],
  
  // Тест для урока 9 (сложные вопросы)
  quizQuestionsHard: [
    {
      text: 'Какое ключевое слово используется для создания функции-генератора в Python?',
      options: [
        'generate',
        'yield',
        'return',
        'iterate'
      ]
    },
    {
      text: 'Для чего используется декоратор в Python?',
      options: [
        'Для измерения времени выполнения функции',
        'Для изменения поведения функции',
        'Для удаления функции',
        'Для документирования функции'
      ]
    },
    {
      text: 'Для чего используется оператор "with" в Python?',
      options: [
        'Для управления циклами',
        'Для написания условных операторов',
        'Для автоматического управления ресурсами',
        'Для определения функций'
      ]
    },
    {
      text: 'Для чего используется lambda функция в Python?',
      options: [
        'Для создания анонимных функций',
        'Для более быстрого выполнения функции',
        'Для документирования функции',
        'Для экспорта функции'
      ]
    },
    {
      text: 'Для чего используются параметры *args и **kwargs в Python?',
      options: [
        'Для передачи в функцию только целых чисел',
        'Для передачи в функцию произвольного числа позиционных и именованных аргументов',
        'Для более быстрого выполнения функции',
        'Для документирования функции'
      ]
    }
  ],
  
  // Ответы на тесты для урока 9
  quizAnswersEasy: {
    q1: 'c',
    q2: 'd',
    q3: 'b',
    q4: 'c',
    q5: 'b'
  },
  
  quizAnswersMedium: {
    q1: 'b',
    q2: 'b',
    q3: 'b',
    q4: 'c',
    q5: 'a'
  },
  
  quizAnswersHard: {
    q1: 'b',
    q2: 'b',
    q3: 'c',
    q4: 'a',
    q5: 'b'
  },
  
  // Практическое задание для урока 9
  practiceTask: `
    <p>Напишите показанный ниже код Python. Этот код создает простую телефонную книгу:</p>
    <ol>
      <li>Создайте словарь (dictionary) для хранения телефонной книги</li>
      <li>Напишите следующие функции:</li>
      <ul>
        <li>add_contact(name, phone) - добавление нового контакта</li>
        <li>remove_contact(name) - удаление контакта</li>
        <li>search_contact(name) - поиск контакта</li>
        <li>display_contacts() - отображение всех контактов</li>
      </ul>
      <li>Создайте меню, предлагающее пользователю следующие опции:</li>
      <ul>
        <li>1 - Добавить новый контакт</li>
        <li>2 - Удалить контакт</li>
        <li>3 - Найти контакт</li>
        <li>4 - Показать все контакты</li>
        <li>5 - Выход</li>
      </ul>
      <li>Используя цикл while, отображайте меню до тех пор, пока пользователь не выберет 5</li>
    </ol>
  `,
  
  // Ответ на практическое задание для урока 9
  practiceAnswer: `# Телефонная книга
phone_book = {}

def add_contact(name, phone):
    phone_book[name] = phone
    print(f"Контакт {name} добавлен.")

def remove_contact(name):
    if name in phone_book:
        del phone_book[name]
        print(f"Контакт {name} удален.")
    else:
        print(f"Контакт {name} не найден.")

def search_contact(name):
    if name in phone_book:
        print(f"{name}: {phone_book[name]}")
    else:
        print(f"Контакт {name} не найден.")

def display_contacts():
    if phone_book:
        print("Телефонная книга:")
        for name, phone in phone_book.items():
            print(f"{name}: {phone}")
    else:
        print("Телефонная книга пуста.")

# Меню
while True:
    print("\\nМеню:")
    print("1 - Добавить новый контакт")
    print("2 - Удалить контакт")
    print("3 - Найти контакт")
    print("4 - Показать все контакты")
    print("5 - Выход")
    
    choice = input("Введите ваш выбор (1-5): ")
    
    if choice == "1":
        name = input("Имя: ")
        phone = input("Телефон: ")
        add_contact(name, phone)
    elif choice == "2":
        name = input("Имя контакта для удаления: ")
        remove_contact(name)
    elif choice == "3":
        name = input("Имя контакта для поиска: ")
        search_contact(name)
    elif choice == "4":
        display_contacts()
    elif choice == "5":
        print("Программа завершена.")
        break
    else:
        print("Неверный выбор. Введите число от 1 до 5.")`
};

// Объединяем все уроки в один объект
const pythonRuQuizPractice = {
  1: lesson1_quiz_practice,
  2: lesson2_quiz_practice,
  3: lesson3_quiz_practice,
  4: lesson4_quiz_practice,
  5: lesson5_quiz_practice,
  6: lesson6_quiz_practice,
  7: lesson7_quiz_practice,
  8: lesson8_quiz_practice,
  9: lesson9_quiz_practice
};

// Экспортируем объект с тестами и практическими заданиями
if (typeof window !== 'undefined') {
  window.pythonRuQuizPractice = pythonRuQuizPractice;
}
