/**
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è EduPlatform
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
 */

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
window.switchLanguage = function(lang) {
    console.log(`üåé –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞: ${lang}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç lang –¥–ª—è HTML
    document.documentElement.setAttribute('lang', lang);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –≤ localStorage
    const userData = JSON.parse(localStorage.getItem('currentUser') || '{}');
    userData.language = lang;
    localStorage.setItem('currentUser', JSON.stringify(userData));

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
        applyTranslationsNow(lang);
    } else {
        document.addEventListener('DOMContentLoaded', function() {
            applyTranslationsNow(lang);
        });
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    showLanguageChangeNotification(lang);
};
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∏—Ö –ø–µ—Ä–µ–≤–æ–¥–∞
function deepScanAndTranslate(lang) {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–∑–ª—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const textNodes = [];
    const walker = document.createTreeWalker(
        document.body, 
        NodeFilter.SHOW_TEXT, 
        null, 
        false
    );

    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–∑–ª—ã
    let node;
    while(node = walker.nextNode()) {
        if (node.nodeValue.trim() !== '') {
            textNodes.push(node);
        }
    }
    
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å data-lang-key
    document.querySelectorAll('[data-lang-key]').forEach(element => {
        const key = element.getAttribute('data-lang-key');
        if (translations[lang] && translations[lang][key]) {
            if (element.tagName === 'INPUT' && element.type !== 'button' && element.type !== 'submit') {
                if (element.hasAttribute('placeholder')) {
                    element.placeholder = translations[lang][key];
                } else {
                    element.value = translations[lang][key];
                }
            } else {
                element.innerHTML = translations[lang][key];
            }
        }
    });
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
function showLanguageChangeNotification(lang) {
    const message = lang === 'kk' ? '–¢—ñ–ª “õ–∞–∑–∞“õ—à–∞“ì–∞ –∞—É—ã—Å—Ç—ã—Ä—ã–ª–¥—ã' : '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π';
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = 'language-notification';
    notification.innerHTML = message;
    notification.style.position = 'fixed';
    notification.style.top = '20px';
    notification.style.right = '20px';
    notification.style.padding = '10px 15px';
    notification.style.backgroundColor = 'rgba(0,0,0,0.8)';
    notification.style.color = '#fff';
    notification.style.borderRadius = '5px';
    notification.style.zIndex = '9999';
    notification.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
    notification.style.transition = 'opacity 0.5s ease';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(function() {
        notification.style.opacity = '0';
        setTimeout(function() {
            if (document.body.contains(notification)) {
                document.body.removeChild(notification);
            }
        }, 500);
    }, 2500);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
function applyTranslationsNow(lang) {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    applyTranslationsToPage(lang);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    const langSelects = document.querySelectorAll('#select, .language-selector');
    langSelects.forEach(select => {
        if (select.tagName === 'SELECT') {
            select.value = lang === 'kk' ? '“ö–∞–∑–∞“õ—à–∞' : '–†—É—Å—Å–∫–∏–π';
        }
    });
    
    // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞, –≤—ã–∑—ã–≤–∞–µ–º –∏—Ö
    if (typeof window.applyUniversalTranslations === 'function') {
        window.applyUniversalTranslations(lang);
    }
    
    // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è updateLanguage, –≤—ã–∑—ã–≤–∞–µ–º –µ—ë
    if (typeof window.updateLanguage === 'function' && window.updateLanguage !== window.switchLanguage) {
        window.updateLanguage(lang);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é —Å–∞–π–¥–±–∞—Ä–∞ –¥–ª—è –∫—É—Ä—Å–æ–≤
    updateSidebarForPythonCourse(lang);
    updateSidebarForDatabaseCourse(lang);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞ –≤ –∫—É—Ä—Å–µ Python
function updateSidebarForPythonCourse(lang) {
    const isPythonCourse = window.location.pathname.includes('python');
    if (isPythonCourse) {
        const lessonsList = document.getElementById('week-1-lessons');
        if (lessonsList && window.lessons) {
            lessonsList.innerHTML = '';
            
            for (let i = 1; i <= Object.keys(window.lessons).length; i++) {
                const lesson = window.lessons[i];
                if (lesson) {
                    const li = document.createElement('li');
                    li.className = 'lesson-item';
                    
                    let lessonText = '';
                    let lessonTitle = '';
                    
                    if (lang === 'kk') {
                        lessonText = '–°–∞–±–∞“õ-' + i;
                        lessonTitle = lesson.title;
                    } else {
                        lessonText = '–£—Ä–æ–∫-' + i;
                        lessonTitle = lesson.title;
                    }
                    
                    li.innerHTML = `
                        <button class="lesson-btn" onclick="loadLesson(${i})">
                            <span class="lesson-title">${lessonText}: ${lessonTitle}</span>
                        </button>
                    `;
                    lessonsList.appendChild(li);
                }
            }
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞ –≤ –∫—É—Ä—Å–µ –ë–∞–∑ –î–∞–Ω–Ω—ã—Ö
function updateSidebarForDatabaseCourse(lang) {
    const isDatabaseCourse = window.location.pathname.includes('database');
    if (isDatabaseCourse) {
        const lessonsList = document.getElementById('week-1-lessons');
        if (lessonsList && window.databaseLessons) {
            lessonsList.innerHTML = '';
            
            for (let i = 1; i <= Object.keys(window.databaseLessons).length; i++) {
                const lesson = window.databaseLessons[i];
                if (lesson) {
                    const li = document.createElement('li');
                    li.className = 'lesson-item';
                    
                    let lessonText = '';
                    let lessonTitle = '';
                    
                    if (lang === 'kk') {
                        lessonText = '–°–∞–±–∞“õ-' + i;
                        lessonTitle = lesson.title;
                    } else {
                        lessonText = '–£—Ä–æ–∫-' + i;
                        lessonTitle = lesson.title;
                    }
                    
                    li.innerHTML = `
                        <button class="lesson-btn" onclick="loadLesson(${i})">
                            <span class="lesson-title">${lessonText}: ${lessonTitle}</span>
                        </button>
                    `;
                    lessonsList.appendChild(li);
                }
            }
        }
    }
}

document.addEventListener('DOMContentLoaded', function() {
    console.log('üåé –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData = JSON.parse(localStorage.getItem('currentUser') || '{}');
    const currentLang = userData.language || 'kk'; // –ö–∞–∑–∞—Ö—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç lang –¥–ª—è HTML
    document.documentElement.setAttribute('lang', currentLang);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    applyTranslationsToPage(currentLang);
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã —è–∑—ã–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const langSelects = document.querySelectorAll('#select, .language-selector');
    langSelects.forEach(select => {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (select.tagName === 'SELECT') {
            select.value = currentLang === 'kk' ? '“ö–∞–∑–∞“õ—à–∞' : '–†—É—Å—Å–∫–∏–π';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
            select.addEventListener('change', function() {
                const newLang = this.value === '“ö–∞–∑–∞“õ—à–∞' ? 'kk' : 'ru';
                window.switchLanguage(newLang);
            });
        }
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
    window.switchLanguage = function(lang) {
        console.log(`üåê –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞: ${lang}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç lang –¥–ª—è HTML
        document.documentElement.setAttribute('lang', lang);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
        applyTranslationsToPage(lang);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        const langSelects = document.querySelectorAll('#select, .language-selector');
        langSelects.forEach(select => {
            if (select.tagName === 'SELECT') {
                select.value = lang === 'kk' ? '“ö–∞–∑–∞“õ—à–∞' : '–†—É—Å—Å–∫–∏–π';
            }
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –≤ localStorage
        const userData = JSON.parse(localStorage.getItem('currentUser') || '{}');
        userData.language = lang;
        localStorage.setItem('currentUser', JSON.stringify(userData));
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
        showLanguageChangeNotification(lang);
        
        // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞, –≤—ã–∑—ã–≤–∞–µ–º –∏—Ö
        if (typeof window.applyUniversalTranslations === 'function') {
            window.applyUniversalTranslations(lang);
        }
        
        // –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è updateLanguage, –≤—ã–∑—ã–≤–∞–µ–º –µ—ë
        if (typeof window.updateLanguage === 'function') {
            window.updateLanguage(lang);
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    function applyTranslationsToPage(lang) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        if (!window.translations || !window.translations[lang]) {
            console.warn('üåê –û–±—ä–µ–∫—Ç –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω–æ–≥–æ —è–∑—ã–∫–∞');
            return;
        }
        
        // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-lang-key
        const elements = document.querySelectorAll('[data-lang-key]');
        elements.forEach(element => {
            const key = element.getAttribute('data-lang-key');
            if (window.translations[lang][key]) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞
                if (element.tagName === 'INPUT' && element.type !== 'button' && element.type !== 'submit') {
                    if (element.hasAttribute('placeholder')) {
                        element.placeholder = window.translations[lang][key];
                    } else {
                        element.value = window.translations[lang][key];
                    }
                } else {
                    element.innerHTML = window.translations[lang][key];
                }
            }
        });
        
        console.log(`üåê –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ ${elements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —è–∑—ã–∫: ${lang}`);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    function showLanguageChangeNotification(lang) {
        const message = lang === 'kk' ? '–¢—ñ–ª “õ–∞–∑–∞“õ—à–∞“ì–∞ –∞—É—ã—Å—Ç—ã—Ä—ã–ª–¥—ã' : '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π';
        
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.className = 'language-notification';
        notification.innerHTML = message;
        notification.style.position = 'fixed';
        notification.style.top = '20px';
        notification.style.right = '20px';
        notification.style.padding = '10px 15px';
        notification.style.backgroundColor = 'rgba(0,0,0,0.8)';
        notification.style.color = '#fff';
        notification.style.borderRadius = '5px';
        notification.style.zIndex = '9999';
        notification.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
        notification.style.transition = 'opacity 0.5s ease';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        document.body.appendChild(notification);
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(function() {
            notification.style.opacity = '0';
            setTimeout(function() {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 500);
        }, 2500);
    }
});
